"""
 Copyright (c) 2021 VMware, Inc. All rights reserved.
"""
from pprint import pformat
from six import iteritems
import re
from .query_result_record_type import QueryResultRecordType


class QueryResultVmGroupVmsRecordType(QueryResultRecordType):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'vm_group_name': 'str',
        'vm_name': 'str',
        'vm_moref': 'str',
        'vapp_name': 'str',
        'vapp_id': 'str',
        'org_vdc_name': 'str',
        'org_vdc_id': 'str',
        'cluster_moref': 'str',
        'vc_id': 'str',
        'vm_group_id': 'str',
        'is_vapp_template': 'bool'
    }

    attribute_map = {
        'vm_group_name': 'vmGroupName',
        'vm_name': 'vmName',
        'vm_moref': 'vmMoref',
        'vapp_name': 'vappName',
        'vapp_id': 'vappId',
        'org_vdc_name': 'orgVdcName',
        'org_vdc_id': 'orgVdcId',
        'cluster_moref': 'clusterMoref',
        'vc_id': 'vcId',
        'vm_group_id': 'vmGroupId',
        'is_vapp_template': 'isVappTemplate'
    }

    def __init__(self, vm_group_name=None,vm_name=None,vm_moref=None,vapp_name=None,vapp_id=None,org_vdc_name=None,org_vdc_id=None,cluster_moref=None,vc_id=None,vm_group_id=None,is_vapp_template=None):
        self._vm_group_name = None
        self._vm_name = None
        self._vm_moref = None
        self._vapp_name = None
        self._vapp_id = None
        self._org_vdc_name = None
        self._org_vdc_id = None
        self._cluster_moref = None
        self._vc_id = None
        self._vm_group_id = None
        self._is_vapp_template = None

        if vm_group_name is not None:
            self.vm_group_name = vm_group_name
        if vm_name is not None:
            self.vm_name = vm_name
        if vm_moref is not None:
            self.vm_moref = vm_moref
        if vapp_name is not None:
            self.vapp_name = vapp_name
        if vapp_id is not None:
            self.vapp_id = vapp_id
        if org_vdc_name is not None:
            self.org_vdc_name = org_vdc_name
        if org_vdc_id is not None:
            self.org_vdc_id = org_vdc_id
        if cluster_moref is not None:
            self.cluster_moref = cluster_moref
        if vc_id is not None:
            self.vc_id = vc_id
        if vm_group_id is not None:
            self.vm_group_id = vm_group_id
        if is_vapp_template is not None:
            self.is_vapp_template = is_vapp_template

    @property
    def vm_group_name(self):
        return self._vm_group_name
    
    @vm_group_name.setter
    def vm_group_name(self, vm_group_name):
        self._vm_group_name = vm_group_name

    @property
    def vm_name(self):
        return self._vm_name
    
    @vm_name.setter
    def vm_name(self, vm_name):
        self._vm_name = vm_name

    @property
    def vm_moref(self):
        return self._vm_moref
    
    @vm_moref.setter
    def vm_moref(self, vm_moref):
        self._vm_moref = vm_moref

    @property
    def vapp_name(self):
        return self._vapp_name
    
    @vapp_name.setter
    def vapp_name(self, vapp_name):
        self._vapp_name = vapp_name

    @property
    def vapp_id(self):
        return self._vapp_id
    
    @vapp_id.setter
    def vapp_id(self, vapp_id):
        self._vapp_id = vapp_id

    @property
    def org_vdc_name(self):
        return self._org_vdc_name
    
    @org_vdc_name.setter
    def org_vdc_name(self, org_vdc_name):
        self._org_vdc_name = org_vdc_name

    @property
    def org_vdc_id(self):
        return self._org_vdc_id
    
    @org_vdc_id.setter
    def org_vdc_id(self, org_vdc_id):
        self._org_vdc_id = org_vdc_id

    @property
    def cluster_moref(self):
        return self._cluster_moref
    
    @cluster_moref.setter
    def cluster_moref(self, cluster_moref):
        self._cluster_moref = cluster_moref

    @property
    def vc_id(self):
        return self._vc_id
    
    @vc_id.setter
    def vc_id(self, vc_id):
        self._vc_id = vc_id

    @property
    def vm_group_id(self):
        return self._vm_group_id
    
    @vm_group_id.setter
    def vm_group_id(self, vm_group_id):
        self._vm_group_id = vm_group_id

    @property
    def is_vapp_template(self):
        return self._is_vapp_template
    
    @is_vapp_template.setter
    def is_vapp_template(self, is_vapp_template):
        self._is_vapp_template = is_vapp_template


    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, QueryResultVmGroupVmsRecordType):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
